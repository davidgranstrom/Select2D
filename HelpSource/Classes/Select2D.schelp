title:: Select2D
summary:: Mix one output from a two-dimensional array of inputs
categories:: UGens>Multichannel>Select
related:: Classes/VSelect, Classes/LinSelectX

description::
The output is mixed from a two-dimensional array of inputs. 

The teletype::select:: argument is calculated internally 
to allow support for uneven shapes of input array(s). 
This is different from the other link::Classes/Select:: UGen classes.

classmethods::
private:: new

method:: ar, kr

argument:: select
a link::Classes/Point:: or a two-channel signal 
note::always use a range between 0 - 1::
argument:: array
a two-dimensional array

examples::
code::
// Selecting an input source is similar to multidimensional array indexing,
// it follows the same syntax i.e. "array[0][0]" but indices has only a range of 0 - 1
(
    x = play { 
        var point = DC.ar([ 0, 1 ]); // array[0][1] == 0.5, in this case
        var input = [
            [ DC.ar(0), DC.ar(0.25), DC.ar(0.5) ],
            [ DC.ar(0.75), DC.ar(1) ],
        ];
        Select2D.ar(point, input).poll;
        Silent.ar; 
    };
)
x.free;
::
code::
// Use a Point to express the array indices
(
    x = play { 
        var point = MouseX.kr@MouseY.kr; // top-left of the screen is Point(0,0)
        var input = [ 
            [ SinOsc.ar, SinOsc.ar(550) ],
            [ Pulse.ar(660), Pulse.ar   ],
        ] * 0.25;
        Select2D.ar(point, input); 
    };
)
x.free;
::
